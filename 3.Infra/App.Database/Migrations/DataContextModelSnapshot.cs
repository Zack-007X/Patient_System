// <auto-generated />
using System;
using App.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace App.Database.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("App.Domain.BookingEntity", b =>
                {
                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1)
                        .HasComment("คีร์ของข้อมูล");

                    b.Property<DateTime?>("bookingDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(4)
                        .HasComment("วันที่จอง");

                    b.Property<string>("bookingNotes")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)")
                        .HasColumnOrder(15)
                        .HasComment("หมายเหตุ การ Booking");

                    b.Property<string>("bookingNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(2)
                        .HasComment("เลขที่การจอง");

                    b.Property<int?>("capacity")
                        .HasColumnType("integer")
                        .HasColumnOrder(13)
                        .HasComment("ความจุหรือจำนวนผู้โดยสารที่รองรับได้");

                    b.Property<DateTime?>("created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(200)
                        .HasComment("เวลาสร้าง");

                    b.Property<Guid?>("customerId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3)
                        .HasComment("ลูกค้า");

                    b.Property<int?>("estimatedCost")
                        .HasColumnType("integer")
                        .HasColumnOrder(6)
                        .HasComment("ราคาประเมิน หน่วยเป็น EA");

                    b.Property<bool?>("isActive")
                        .HasColumnType("boolean")
                        .HasColumnOrder(202)
                        .HasComment("ใช้งานได้หรือไม่");

                    b.Property<bool?>("isConfirm")
                        .HasColumnType("boolean")
                        .HasColumnOrder(7)
                        .HasComment("Confirm แล้ว");

                    b.Property<string>("manufacturer")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(10)
                        .HasComment("ผู้ผลิตยานอวกาศ");

                    b.Property<string>("model")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(9)
                        .HasComment("รุ่นของยานอวกาศ");

                    b.Property<string>("registrationNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(12)
                        .HasComment("หมายเลขทะเบียนยานอวกาศ");

                    b.Property<DateTime?>("scheduledRepairDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(5)
                        .HasComment("วันที่นัดซ่อม");

                    b.Property<string>("spacecraftImage1")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(16)
                        .HasComment("รูปถ่ายยาน 1");

                    b.Property<string>("spacecraftImage2")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(17)
                        .HasComment("รูปถ่ายยาน 2");

                    b.Property<string>("spacecraftImage3")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(18)
                        .HasComment("รูปถ่ายยาน 3");

                    b.Property<string>("spacecraftName")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(8)
                        .HasComment("ชื่อยานอวกาศ");

                    b.Property<string>("spacecraftNotes")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)")
                        .HasColumnOrder(14)
                        .HasComment("หมายเหตุเพิ่มเติมเกี่ยวกับยาน");

                    b.Property<Guid?>("staffId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(19)
                        .HasComment("ผู้ดูแลลูกค้า");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(201)
                        .HasComment("เวลาปรับปรุงล่าสุด");

                    b.Property<string>("yearOfManufacture")
                        .HasColumnType("text")
                        .HasColumnOrder(11)
                        .HasComment("ปีที่ผลิต");

                    b.HasKey("id");

                    b.HasIndex("customerId");

                    b.HasIndex("staffId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("App.Domain.CustomerEntity", b =>
                {
                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1)
                        .HasComment("คีร์ของข้อมูล");

                    b.Property<string>("address")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)")
                        .HasColumnOrder(4)
                        .HasComment("ที่อยู่");

                    b.Property<string>("contactInfo")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)")
                        .HasColumnOrder(3)
                        .HasComment("ข้อมูลติดต่อ");

                    b.Property<DateTime?>("created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(200)
                        .HasComment("เวลาสร้าง");

                    b.Property<bool?>("isActive")
                        .HasColumnType("boolean")
                        .HasColumnOrder(202)
                        .HasComment("ใช้งานได้หรือไม่");

                    b.Property<string>("name")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(2)
                        .HasComment("ชื่อลูกค้า");

                    b.Property<string>("password")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(6)
                        .HasComment("รหัสผ่าน");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(201)
                        .HasComment("เวลาปรับปรุงล่าสุด");

                    b.Property<string>("username")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(5)
                        .HasComment("ชื่อผู้ใช้งาน");

                    b.HasKey("id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("App.Domain.PaymentEntity", b =>
                {
                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1)
                        .HasComment("คีร์ของข้อมูล");

                    b.Property<int?>("amountEA")
                        .HasColumnType("integer")
                        .HasColumnOrder(3)
                        .HasComment("จำนวนเงินที่ชำระเป็นหน่วย EA");

                    b.Property<DateTime?>("created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(200)
                        .HasComment("เวลาสร้าง");

                    b.Property<string>("documentCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(4)
                        .HasComment("เลขที่ใบชำระเงิน");

                    b.Property<string>("exchangeItems")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)")
                        .HasColumnOrder(6)
                        .HasComment("รายการสิ่งของที่ใช้ในการแลกเปลี่ยน");

                    b.Property<bool?>("isActive")
                        .HasColumnType("boolean")
                        .HasColumnOrder(202)
                        .HasComment("ใช้งานได้หรือไม่");

                    b.Property<DateTime?>("paymentDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(7)
                        .HasComment("วันที่ชำระ");

                    b.Property<string>("paymentMethod")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnOrder(5)
                        .HasComment("วิธีชำระเงิน");

                    b.Property<string>("paymentNote")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)")
                        .HasColumnOrder(8)
                        .HasComment("หมายเหตุการชำระ");

                    b.Property<Guid?>("repairId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2)
                        .HasComment("เอกสารซ่อม");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(201)
                        .HasComment("เวลาปรับปรุงล่าสุด");

                    b.HasKey("id");

                    b.HasIndex("repairId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("App.Domain.RepairEntity", b =>
                {
                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1)
                        .HasComment("คีร์ของข้อมูล");

                    b.Property<Guid?>("bookingId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2)
                        .HasComment("Booking");

                    b.Property<DateTime?>("created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(200)
                        .HasComment("เวลาสร้าง");

                    b.Property<DateTime?>("endDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(6)
                        .HasComment("วันที่ซ่อมเสร็จ");

                    b.Property<bool?>("isActive")
                        .HasColumnType("boolean")
                        .HasColumnOrder(202)
                        .HasComment("ใช้งานได้หรือไม่");

                    b.Property<string>("repairCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(3)
                        .HasComment("เลขที่การซ่อม");

                    b.Property<string>("repairNote")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)")
                        .HasColumnOrder(8)
                        .HasComment("หมายเหตุการซ่อม");

                    b.Property<DateTime?>("startDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(5)
                        .HasComment("วันที่เริ่มซ่อม");

                    b.Property<Guid?>("technicianId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(4)
                        .HasComment("ช่างซ่อม");

                    b.Property<int?>("totalCostEA")
                        .HasColumnType("integer")
                        .HasColumnOrder(7)
                        .HasComment("มูลค่าการซ่อมเป็นหน่วย EA");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(201)
                        .HasComment("เวลาปรับปรุงล่าสุด");

                    b.HasKey("id");

                    b.HasIndex("bookingId");

                    b.HasIndex("technicianId");

                    b.ToTable("Repairs");
                });

            modelBuilder.Entity("App.Domain.UserEntity", b =>
                {
                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1)
                        .HasComment("คีร์ของข้อมูล");

                    b.Property<DateTime?>("created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(200)
                        .HasComment("เวลาสร้าง");

                    b.Property<string>("email")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(5)
                        .HasComment("อีเมล/username");

                    b.Property<string>("fullname")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(3)
                        .HasComment("ชื่อเต็ม");

                    b.Property<bool?>("isActive")
                        .HasColumnType("boolean")
                        .HasColumnOrder(202)
                        .HasComment("ใช้งานได้หรือไม่");

                    b.Property<bool?>("isAdministrator")
                        .HasColumnType("boolean")
                        .HasColumnOrder(9)
                        .HasComment("เป็น Admin");

                    b.Property<bool?>("isCustomerService")
                        .HasColumnType("boolean")
                        .HasColumnOrder(7)
                        .HasComment("เป็น ผู้ดูแลลูกค้า");

                    b.Property<bool?>("isInventoryManager")
                        .HasColumnType("boolean")
                        .HasColumnOrder(10)
                        .HasComment("เป็น ผู้จัดการคลังสินค้า");

                    b.Property<bool?>("isTechnician")
                        .HasColumnType("boolean")
                        .HasColumnOrder(8)
                        .HasComment("เป็น ช่างซ่อม");

                    b.Property<string>("nickname")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(2)
                        .HasComment("ชื่อเรียก");

                    b.Property<string>("password")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(6)
                        .HasComment("รหัสผ่าน");

                    b.Property<string>("phone")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(4)
                        .HasComment("โทรศัพท์");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(201)
                        .HasComment("เวลาปรับปรุงล่าสุด");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("App.Domain.BookingEntity", b =>
                {
                    b.HasOne("App.Domain.CustomerEntity", "Customer_customerId")
                        .WithMany("Bookings")
                        .HasForeignKey("customerId");

                    b.HasOne("App.Domain.UserEntity", "User_staffId")
                        .WithMany("Bookings")
                        .HasForeignKey("staffId");

                    b.Navigation("Customer_customerId");

                    b.Navigation("User_staffId");
                });

            modelBuilder.Entity("App.Domain.PaymentEntity", b =>
                {
                    b.HasOne("App.Domain.RepairEntity", "Repair_repairId")
                        .WithMany("Payments")
                        .HasForeignKey("repairId");

                    b.Navigation("Repair_repairId");
                });

            modelBuilder.Entity("App.Domain.RepairEntity", b =>
                {
                    b.HasOne("App.Domain.BookingEntity", "Booking_bookingId")
                        .WithMany("Repairs")
                        .HasForeignKey("bookingId");

                    b.HasOne("App.Domain.UserEntity", "User_technicianId")
                        .WithMany("Repairs")
                        .HasForeignKey("technicianId");

                    b.Navigation("Booking_bookingId");

                    b.Navigation("User_technicianId");
                });

            modelBuilder.Entity("App.Domain.BookingEntity", b =>
                {
                    b.Navigation("Repairs");
                });

            modelBuilder.Entity("App.Domain.CustomerEntity", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("App.Domain.RepairEntity", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("App.Domain.UserEntity", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Repairs");
                });
#pragma warning restore 612, 618
        }
    }
}
